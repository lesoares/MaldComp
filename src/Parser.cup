import java_cup.runtime.*;

parser code {:
	private No arv = null;
:}

/* Terminais */

terminal IF, THEN, ELSE, DEF;
terminal MAIS, MENOS, MULT, DIVISAO;
terminal ATR;
terminal MENOR, MAIOR, IGUAL;
terminal VIRG, PONTOVIRG, APARENT, FPARENT;
terminal ID;
terminal NUM;


/* Nao terminais */
non terminal programa;
non terminal instrucao;
non terminal instrucao2;
non terminal definicao;
non terminal args;
non terminal args2;
non terminal sequencia;
non terminal expressao;
non terminal expressao2;
non terminal opRel;
non terminal opArit;

/* Precedencia */
precedence left MAIS, MENOS;
precedence left MULT, DIVISAO;

/* Producoes */
start with programa;

programa ::= ID ATR NUM PONTOVIRG programa:p
			{:
				arv = new No("programa");
				arv.novoFilho("id", id.value);
				arv.novoFilho("=");
				arv.novoFilho("num", Integer);
				arv.novoFilho(";");
				arv.novoFilho(p);
				RESULT = arv;
			:}
      | instrucao:i
      	{:
      		arv = new No("programa");
			arv.novoFilho(i);
      		RESULT = arv;
      	:} 
      ;

instrucao ::= definicao:d instrucao2:i2;
			{:
				arv = new No("instrucao");
				arv.novoFilho(d);
				arv.novoFilho(id2);
				RESULT = arv;
			
			:}

instrucao2 ::= PONTOVIRG instrucao:i
			{:
				arv = new No("instrucao2");
				arv.novoFilho(";");
				arv.novoFilho(i);
				RESULT = arv;
			:}
      |
      ;

definicao ::= DEF ID APARENT args FPARENT IGUAL expressao;
			{:
				arv = new No("definicao");
				arv.novoFilho("def");
				arv.novoFilho();
				RESULT = arv;
			:}

args ::= ID args2;

args2 ::= VIRG args
      |
      ;

sequencia ::= expressao
      | sequencia VIRG expressao
      ;

expressao ::= NUM
      | IF expressao opRel expressao THEN expressao ELSE expressao
      | expressao opArit expressao
      | ID expressao2
      ;

expressao2 ::= APARENT sequencia FPARENT
      |
      ;

opRel ::= MENOR
      | MAIOR
      | IGUAL
      ;


opArit ::= MAIS
      | MENOS
      | MULT
      | DIVISAO
      ;
